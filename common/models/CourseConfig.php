<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "{{%course_config}}".
 *
 * @property string $course_config_id
 * @property string $name
 * @property integer $parent
 * @property integer $order
 * @property integer $type
 * @property integer $status
 */
class CourseConfig extends \yii\db\ActiveRecord
{
    const TYPE_COURSE = 1; //课程分类
    const TYPE_INDEX = 2; //课程首页标签

    const STATUS_DEFAULT = 1; //默认状态
    const STATUS_NOSHOW = 0; //隐藏状态

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%course_config}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'parent'], 'required'],
            [['parent', 'type', 'order', 'is_radio', 'status'], 'integer'],
            [['name'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'course_config_id' => 'ID',
            'name' => '名称',
            'parent' => '父级',
            'order' => '排序',
            'is_radio' => '是否单选',
            'type' => '配置类型',
            'status' => '状态',
        ];
    }

    public function save($runValidation = true, $attributeNames = null)
    {
        if (!$this->order)
        {
            $this->order = 0;
        }
        if ($this->parent != 0)
        {
            $model = self::findOne($this->parent);
            $this->type = $model->type;
        }
        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }

    public static function getConfigData()
    {
        $result = [];
        $data = self::find()->select(['name','course_config_id','type','is_radio'])->where(['parent'=>0, 'status'=>self::STATUS_DEFAULT])->orderBy(['order'=>SORT_DESC])->asArray(true)->all();
        foreach ($data as $k=> $v)
        {
            $result[$v['type']][$k]= $v;
            $result[$v['type']][$k]['items'] = self::find()->select(['name','course_config_id'])->where(['parent'=>$v['course_config_id'], 'status'=>self::STATUS_DEFAULT])->orderBy(['order'=>SORT_DESC])->asArray(true)->all();
//            foreach ($items as $item)
//            {
//                $result[$v['type']][$k]['items'][$item['course_config_id']] = $item['name'];
//            }
        }
        return $result;
    }

    public static function getConfigIndexData()
    {
        $result = [];
        $data = self::find()->where(['parent'=>0, 'type'=>self::TYPE_INDEX, 'status'=>self::STATUS_DEFAULT])->orderBy(['order'=>SORT_DESC])->asArray(true)->all();
        foreach ($data as $k=> $v)
        {
            $result[$v['course_config_id']]['lab'] = $v['name'];
            $result[$v['course_config_id']]['is_radio'] = $v['is_radio'];
            $result[$v['course_config_id']]['items'] = [];
            $items = self::find()->where(['parent'=>$v['course_config_id'], 'type'=>self::TYPE_INDEX, 'status'=>self::STATUS_DEFAULT])->orderBy(['order'=>SORT_DESC])->asArray(true)->all();
            foreach ($items as $item)
            {
                $result[$v['course_config_id']]['items'][$item['course_config_id']] = $item['name'];
            }
        }
        return $result;
    }

    public function getAllData($parent = 0)
    {
        $data = self::find()->where(['parent'=>0, 'status'=>self::STATUS_DEFAULT])->orderBy(['order'=>SORT_DESC])->asArray(true)->all();
        $result = [0=>'一级数据'];
        foreach ($data as $v)
        {
            $type = self::type();
            $result[$type[$v['type']]][$v['course_config_id']] = $v['name'];
//            $result[$v['course_config_id']] = $v['name'];
        }
        return $result;
    }

    public static function type()
    {
        return [
            self::TYPE_COURSE => '课程分类',
            self::TYPE_INDEX => '首页标签推荐',
        ];
    }

    public static function dropDown($column, $value = null)
    {
        $dropDownList = [
            'parent' => self::getAllData(),
            'type' => self::type(),
            'status' => [
                self::STATUS_DEFAULT => '正常',
                self::STATUS_NOSHOW => '隐藏',
            ],
        ];
        //根据具体值显示对应的值
        if ($value !== null) {
            return array_key_exists($column, $dropDownList) ? $dropDownList[$column][$value] : false;
        }

        //返回关联数组，用户下拉的filter实现
        else {
            return array_key_exists($column, $dropDownList) ? $dropDownList[$column] : false;
        }
    }
}
