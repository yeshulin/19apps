<?php

namespace common\models;

use common\models\Video;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "{{%course}}".
 *
 * @property string $course_id
 * @property string $course_name
 * @property string $brief
 * @property string $description
 * @property integer $authorid
 * @property string $thumb
 * @property integer $type
 * @property integer $userid
 * @property integer $auth_count_time
 * @property integer $count_knows_num
 * @property integer $likenumber
 * @property integer $learnnumber
 * @property integer $status
 * @property integer $config
 * @property integer $create_at
 * @property integer $update_at
 */
class Course extends \yii\db\ActiveRecord
{
    const COURSE_CONFIG_ID = 3359;

    // 课程状态定义
    const STATUS_DELETE = 0; //删除状态
    const STATUS_DEFAULT = 1; //默认状态
    const STATUS_CHECK = 2; //待审状态
    const STATUS_REJECT = 3; //驳回状态

    //课程类型定义
    const TYPE_DEFAULT = 1; //默认课程类型   视频课程

    const AUTH_TIMES = 12; //默认认证时长（月）

    public $config;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%course}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['course_name', 'brief', 'description', 'thumb', 'type', 'userid', 'auth_count_time'], 'required'],
            [['course_name'], 'unique'],
            [['description', 'brief'], 'string'],
            [['authorid', 'likenumber', 'learnnumber','type', 'userid', 'status', 'create_at', 'update_at', 'auth_count_time', 'count_knows_num'], 'integer'],
            [['course_name'], 'string', 'max' => 40],
//            [['brief'], 'string', 'max' => 255],
            [['thumb'], 'string', 'max' => 100],
        ];
    }

    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['create_at', 'update_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => ['update_at'],
                ],
            ],
        ];
    }


    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'course_id' => '课程id',
            'course_name' => '课程名称',
            'brief' => '课程简介',
            'description' => '课程描述',
            'authorid' => 'Authorid',
            'auth_count_time'=>'授权时长',
            'count_knows_num'=>'课时数',
            'thumb' => '封面',
            'object' => '适用对象',
            'learnnumber' => '正在学习人数',
            'likenumber' => '喜欢学习人数',
            'type' => '课程类型',
            'userid' => '用户id',
            'status' => '状态',
            'create_at' => '添加时间',
            'update_at' => '更新时间',
        ];
    }

    public function save($runValidation = true, $attributeNames = null)
    {
        if (!$this->count_knows_num)
        {
            $this->count_knows_num = 0;
        }
        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }

//    /**
//     * 根据课程ID获取章节
//     * @param $courseid
//     * @return array|\yii\db\ActiveRecord[]
//     */
//    public static function getCourseSections($courseid)
//    {
//        if (($CourseSections = Yii::$app->cache->get('course_manage_'.$courseid)) === false)
//        {
//            $model = new CourseSections();
//            $CourseSections = $model::find()->where(['courseid'=>$courseid])->orderBy(['order'=>SORT_DESC])->asArray(true)->all();
//            foreach ($CourseSections as $k => $v)
//            {
//                $CourseSections[$k]['bars'] = self::getCourseSectionsBars($v['sectionid']);
//            }
//            Yii::$app->cache->set('course_manage_'.$courseid, $CourseSections);
//        }
//
//        return $CourseSections;
//    }
//
//    /**
//     * 根据章节ID获取小节
//     * @param $sectionid
//     * @return array|\yii\db\ActiveRecord[]
//     */
//    public static function getCourseSectionsBars($sectionid)
//    {
//        $model = new CourseBars();
//        $CourseBars = $model::find()->where(['sectionid'=>$sectionid])->orderBy(['order'=>SORT_DESC])->asArray(true)->all();
//        foreach ($CourseBars as $k => $v)
//        {
//            $CourseBars[$k]['knows'] = self::getCourseSectionsBarsKnows($v['barsid']);
//        }
//        return $CourseBars;
//    }
//
//    /**
//     * 根据小节ID获取知识点信息以及关联信息
//     * @param $barsid
//     * @return array|\yii\db\ActiveRecord[]
//     */
//    public static function getCourseSectionsBarsKnows($barsid)
//    {
//        $model = new CourseKnows();
//        $CourseKnows = $model::find()->where(['barsid'=>$barsid])->orderBy(['order'=>SORT_DESC])->asArray(true)->all();
//        foreach ($CourseKnows as $k => $v)
//        {
//            switch($v['type']):
//                case CourseKnows::TYPE_VIDEO:
//                    if (($linkModel = Video::findOne($v['linkid'])) !== null)
//                    {
//                        $CourseKnows[$k] = $linkModel;
//                    }
//                    break;
//            endswitch;
//        }
//        return $CourseKnows;
//    }


    public static function dropDown($column, $value = null)
    {
        $dropDownList = [
            'status' => [
                self::STATUS_DEFAULT => '正常',
                self::STATUS_CHECK => '待审核',
                self::STATUS_DELETE => '删除',
                self::STATUS_REJECT => '驳回',
            ],
            'type' => [
                self::TYPE_DEFAULT => '视频课程',
            ],
        ];
        //根据具体值显示对应的值
        if ($value !== null) {
            return array_key_exists($column, $dropDownList) ? $dropDownList[$column][$value] : false;
        }

        //返回关联数组，用户下拉的filter实现
        else {
            return array_key_exists($column, $dropDownList) ? $dropDownList[$column] : false;
        }
    }


    public function getConfig()
    {
        return $this->hasMany(CourseConfigId::className(), ['course_id'=>'course_id'])->asArray(true);
    }

    /**
     * 获取章节信息
     * @return \yii\db\ActiveQuery
     */
    public function getCourseSections()
    {
        return $this->hasMany(CourseSections::className(), ['courseid'=> 'course_id']);
    }


}
