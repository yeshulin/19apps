<?php
namespace frontend\controllers;

use common\components\QQapi;
use common\components\sina\SaeTOAuthV2;
use common\components\sina\SaeTClientV2;
use common\components\sina\OAuthException;
use frontend\models\Member;
use Yii;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\models\LoginForm;

/**
 * Site controller
 */
class AuthController extends Controller
{
    public $enableCsrfValidation = false;//关闭csrf验证
    public $layout = 'login';
    public $time='';
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'actions' => ['login','reg','error','active','qq-login','sina-login'],
                        'allow' => true,
                    ],
                    [
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                    [
                        'actions' => ['main'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
//                    'logout' => ['post'],
                ],
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
        ];
    }
    public function beforeAction($action)
    {
        $this->time=time();
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Login action.
     *
     * @return string
     */
    public function actionIndex(){
        if (!Yii::$app->user->isGuest) {
            $this->redirect(['user/default/index']);
        }
        return $this->render('reg');
    }
    public function actionReg()
    {
        if (!Yii::$app->user->isGuest) {
            $this->redirect(['user/default/index']);
        }
        return $this->render('reg');
    }
    public function actionActive(){
        return $this->render('active');
    }
    /**
     * Login action.
     *
     * @return string
     */
    public function actionLogin()
    {
        if (!Yii::$app->user->isGuest) {
            $this->redirect(['user/default/index']);
        }
        return $this->render('login');
    }

    /**
     * Logout action.
     *
     * @return string
     */
    public function actionLogout()
    {
        Yii::$app->user->logout();

        $this->redirect(['auth/login']);
    }

    /*
     * 新浪登陆
     * */
    public function actionSinaLogin() {
         $appid = Yii::$app->params['appid']['sina'];
         $appkey = Yii::$app->params['appkey']['sina'];
         $callback = Yii::$app->params['callback']['sina'];
        $get = Yii::$app->request->queryParams;
        $token='';
        if(isset($get['callback']) && trim($get['callback'])) {
            $o = new SaeTOAuthV2($appid, $appkey);
            if (isset($get['code'])) {
                $keys = array();
                $keys['code'] = $get['code'];
                $keys['redirect_uri'] = $callback;
                try {
                    $token = $o->getAccessToken('code', $keys);
                } catch (OAuthException $e) {
                }
            }
            if ($token) {
                Yii::$app->session->set('token',$token);
            }
            $c = new SaeTClientV2($appid, $appkey,  Yii::$app->session->get('token')['access_token']);
            $ms  = $c->home_timeline(); // done
            $uid_get = $c->get_uid();
            $uid = $uid_get['uid'];
            $me = $c->show_user_by_id( $uid);//根据ID获取用户等基本信息
            if(CHARSET != 'utf-8') {
                $me['name'] = iconv('utf-8', CHARSET, $me['name']);
                $me['location'] = iconv('utf-8', CHARSET, $me['location']);
                $me['description'] = iconv('utf-8', CHARSET, $me['description']);
                $me['screen_name'] = iconv('utf-8', CHARSET, $me['screen_name']);
            }
            if(!empty($me['id'])) {
                Yii::$app->session->set('openid',$me['id']);
                //检查connect会员是否绑定，已绑定直接登录，未绑定提示注册/绑定页面
                $member = Member::findOne(['connectid'=>$me['id'],'from'=>'qq']);
                if(!empty($member)){
                    $model = new LoginForm();
                    $model->connectId=$me['id'];
                    if ($model->loginByConnectId()) {
                        $member->lastdate=$this->time;
                        $member->nickname=$me['name'];
                        $member->lastip=Yii::$app->request->getUserIP();
                        $member->delRules("password","required");
                        $member->save();
                        $this->redirect(['user/default/index']);
                    }else{
//                        $this->setReturn("0003","failed",'',"登陆失败");
                        return $this->render('login');
                    }
                }else{
                    //未存在于数据库中，跳去完善资料页面。页面预置用户名（QQ返回是UTF8编码，如有需要进行转码）
                    $user = $me['name'];
                    Yii::$app->session->set('from',"sina");
                    if(CHARSET != 'utf-8') {//转编码
                        $connect_username = iconv('utf-8', CHARSET, $user);
                    } else {
                        $connect_username = $user;
                    }
                    //注册页面跳转
                    return $this->render('reg');
                }
            } else {
                return $this->render('reg');
            }
        } else {
            $this->layout=false;
            $o = new SaeTOAuthV2($appid, $appkey);
            $aurl = $o->getAuthorizeURL($callback);
            return $this->render('sina',[
                "aurl"=>$aurl,
            ]);
//            include template('member', 'connect_sina');
        }
    }

    /*
    * 三方登陆 QQ
    * */
    /**
     * QQ号码登录
     * 该函数为QQ登录回调地址
     */
    public function actionQqLogin(){

        header('P3P: CP="CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR"');
        $info = new QQapi();
        $get=Yii::$app->request->queryParams;
        if(!isset($get['code'])){
            $info->redirect_to_login();
//            $this->setReturn("0003","failed",'',"缺少参数code");
        }else{
//            echo 1;exit;
            $code = $get['code'];
            $openid = $info->get_openid($code);
//            var_dump($openid);exit;
//            $openid = "123456";
            Yii::$app->session->set('openid',$openid);
            if(!empty($openid)){
                $member = Member::findOne(['connectid'=>$openid,'from'=>'qq']);
                if(!empty($member)){
                    $model = new LoginForm();
                    $model->connectId=$openid;
                    if ($model->loginByConnectId()) {
                        $member->lastdate=$this->time;
                        $member->nickname=$info->get_user_info();
                        $member->lastip=Yii::$app->request->getUserIP();
                        $member->delRules("password","required");
                        $member->save();
                        $this->redirect(['user/default/index']);
                    }else{
//                        $this->setReturn("0003","failed",'',"登陆失败");
                        return $this->render('login');
                    }
                }else{
                    //未存在于数据库中，跳去完善资料页面。页面预置用户名（QQ返回是UTF8编码，如有需要进行转码）
                    $user = $info->get_user_info();
                    Yii::$app->session->set('from',"qq");
                    if(CHARSET != 'utf-8') {//转编码
                        $connect_username = iconv('utf-8', CHARSET, $user);
                    } else {
                        $connect_username = $user;
                    }
                    //注册页面跳转
                    return $this->render('reg');
                }
            }else{
//                $this->setReturn("0003","failed",'',"非法参数");
                return $this->render('login');
            }
        }
    }
}
