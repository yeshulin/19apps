<?php
/**
 * Created by PhpStorm.
 * User: IUOD
 * Date: 2016/7/29
 * Time: 15:50
 */

namespace frontend\controllers\api;


use Yii;
use frontend\models\Video;

class VideoManageController extends ApiController
{
    public $api = ['list', 'create', 'update', 'delete'];

    public $videoInfo;

    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'index' => ['POST'],
                ],
            ],
        ];
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->isGuest();
    }

    public function actionIndex()
    {
        if (Yii::$app->user->identity->usertype == 0) {
            return self::setReturn('0003', 'failed', '','你的账号没有此操作权限');
        }
        $params = $this->rawBody;
        $type = isset($params['method']) ? strtolower((string) $params['method']) : 'list';
        if (!in_array($type, $this->api)) {
            return self::setReturn('0003', 'failed', '', '未找到请求的方法');
        }
        $action = '_'.$type;
        return $this->$action($params);
    }

    /**
     * 我的发布视频列表
     * @return mixed
     */
    protected function _list($params)
    {
        $videoModel = new Video();
        $videoData = $videoModel->search($params);
        return self::setReturn('0000', 'success',$videoData);
    }

    protected function _create($params)
    {
        $model = new Video();
        if ($model->load($params)) {
            if ($model::find()->where(['videoname'=>$model->videoname])->one() !== null)
            {
                return self::setReturn('0002', 'failed', '','视频名称已经存在无法添加');
            }

            if ($model->save())
            {
                return self::setReturn('0000', 'success','视频添加成功');
            }
            $error = $model->getErrors();
            return self::setReturn('0002', 'failed', '',$error[key($error)][0]);
        }
        else {
            return self::setReturn('0002', 'failed', '','添加视频出错');
        }
    }

    protected function _update($params)
    {
        $id = $params['id'] ? intval($params['id']) : null;
        if ($this->checkVideoId($id)){
            unset($params['id']);
            $model = $this->videoInfo;
            if ($model->load($params)) {
                if (Video::find()->where(['videoname'=>$model->videoname])->andWhere("videoid != $id")->one() !== null)
                {
                    return self::setReturn('0002', 'failed', '','视频名称已经存在无法更新');
                }
                if ($model->save())
                {
                    return self::setReturn('0000', 'success', '视频更新成功');
                }

                $error = $model->getErrors();
                return self::setReturn('0002', 'failed', '',$error[key($error)][0]);
            }
            else {
                return self::setReturn('0002', 'failed', '','视频更新出错');
            }
        }
    }

    protected function _delete($params)
    {
        $id = $params['id'] ? intval($params['id']) : null;
        if ($this->checkVideoId($id)) {
            $model = $this->videoInfo;
            if ($model->delete()) {
                return self::setReturn('0000', 'success', '删除成功');
            } else {
                return self::setReturn('0002', 'failed', '', '删除失败');
            }
        }
    }

    protected function checkVideoId($id = null)
    {
        if (is_null($id))
        {
            self::setReturn('0002', 'failed', '', '缺少视频ID');
            return false;
        }
        $info = Video::find()->where(['videoid'=>$id, 'userid'=>\Yii::$app->user->id])->one();
        if ($info == null)
        {
            self::setReturn('0002', 'failed', '','没有此课程的权限操作');
            return false;
        }
        else {
            $this->videoInfo = $info;
            return true;
        }
    }

}